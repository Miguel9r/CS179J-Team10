#include <ArduinoBLE.h>

const int ledPin = 13; // set ledPin to on-board LED
const int buttonPin = 4; // set buttonPin to digital pin 4


BLEService ledService("19B10010-E8F2-537E-4F6C-D104768A1214"); // create service

BLEDescriptor ledDescriptor("0d75a792-ddba-4361-a523-53426d1aa46e", "0001"); // descriptor for led service


// create switch characteristic and allow remote device to read and write
BLECharCharacteristic ledCharacteristic("19B10011-E8F2-537E-4F6C-D104768A1214", BLERead | BLEWrite);
// create button characteristic and allow remote device to get notifications
BLECharCharacteristic buttonCharacteristic("19B10012-E8F2-537E-4F6C-D104768A1214", BLERead | BLENotify); // allows remote device to get notifications

int buttonInput;

void setup() {
  Serial.begin(9600);
  pinMode(ledPin, OUTPUT); // use the LED on pin 13 as an output
  pinMode(buttonPin, INPUT); // use button pin 4 as an input

   if (!BLE.begin()) {
      Serial.println("starting BLE failed!");

      while (1);
    }

   BLE.setLocalName("LED");
   BLE.setAdvertisedService(ledService);

     // add the characteristic to the service
     ledService.addCharacteristic(ledCharacteristic);
     ledService.addCharacteristic(buttonCharacteristic);

     // add service
    BLE.addService(ledService);

    // set the initial value for the characteristic:
      ledCharacteristic.writeValue(0);
      buttonCharacteristic.writeValue(0);

    BLE.advertise();

  Serial.println("Bluetooth device active, waiting for connections...");
}

void loop() {
 // listen for BLE peripherals to connect:
   BLEDevice central = BLE.central();

   buttonInput = digitalRead(buttonPin);

  // if a central is connected to peripheral:
    if (central) {
      Serial.print("Connected to central: ");
      // print the central's MAC address:
      Serial.println(central.address());

      // while the central is still connected to peripheral:
      while (central.connected()) {
        // if the remote device wrote to the characteristic,
        // use the value to control the LED:
        if (ledCharacteristic.written()) {
          if (ledCharacteristic.value()) {   // any value other than 0
            Serial.println("LED on");
            digitalWrite(ledPin, HIGH);         // will turn the LED on
          } else {                              // a 0 value
            Serial.println(F("LED off"));
            digitalWrite(ledPin, LOW);          // will turn the LED off
          }
        }
        else if(buttonInput == HIGH)
        {
            byte value = 0;

            ledCharacteristic.readValue(value);

            if(value & 0x00)
            {
                digitalWrite(ledPin, HIGH);
                ledCharacteristic.write((byte) 0x01);

            }
            else
            {
                   digitalWrite(ledPin, LOW);
                   ledCharacteristic.write((byte) 0x00);
            }

        }
        }
      }


}